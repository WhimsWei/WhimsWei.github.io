<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>魏胡超</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://weihuchao.top/"/>
  <updated>2018-11-18T14:18:39.000Z</updated>
  <id>http://weihuchao.top/</id>
  
  <author>
    <name>魏胡超</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>python实现设计模式之策略模式</title>
    <link href="http://weihuchao.top/2018/11/18/python%E5%AE%9E%E7%8E%B0%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
    <id>http://weihuchao.top/2018/11/18/python实现设计模式之策略模式/</id>
    <published>2018-11-18T14:18:39.000Z</published>
    <updated>2018-11-18T14:18:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-初始"><a href="#1-初始" class="headerlink" title="1 初始"></a>1 初始</h2><p>创建一个超类Duck，所有鸭子继承它。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">class Duck:</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def quack(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def swime(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        # 继承的鸭子实现这个方法</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    # 新增功能</span><br><span class="line">    def fly(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class MallardDuck(Duck):</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class ReadHeadDuck(Duck):</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        pass</span><br></pre></td></tr></table></figure><p>现在为了让鸭子能飞， 加入方法fly()， 这样就导致所有鸭子都会飞， 这不符合实际情况。</p><h3 id="1-1-办法一：-重写"><a href="#1-1-办法一：-重写" class="headerlink" title="1.1 办法一： 重写"></a>1.1 办法一： 重写</h3><p>重写会导致每个继承的鸭子都需要重写</p><h3 id="1-2-方法二：接口"><a href="#1-2-方法二：接口" class="headerlink" title="1.2 方法二：接口"></a>1.2 方法二：接口</h3><p>在java中接口需要实现，所以不利于代码复用。</p><h3 id="1-3-方法三：-继承"><a href="#1-3-方法三：-继承" class="headerlink" title="1.3 方法三： 继承"></a>1.3 方法三： 继承</h3><p>设计原则： 封装变化（需要变化的和不需要变化的代码不要混合在一起，应该把变化的部分独立出来）。</p><p>于是将fly()单独写一个类，有飞行功能的鸭子继承即可。</p><p>设计原则2： 针对接口编程，而不是针对实现编程。</p><h3 id="1-4-整合之后"><a href="#1-4-整合之后" class="headerlink" title="1.4 整合之后"></a>1.4 整合之后</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">class Duck:</span><br><span class="line">    fly_behavior = None</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        pass</span><br><span class="line"></span><br><span class="line">    def perform_fly(self):</span><br><span class="line">        self.fly_behavior.fly()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class FlyBase:</span><br><span class="line">    pass</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class FlyWithWings(FlyBase):</span><br><span class="line">    def fly(self):</span><br><span class="line">        print &quot;fly..&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class FlyNoWay(FlyBase):</span><br><span class="line">    def fly(self):</span><br><span class="line">        print &quot;cannot fly..&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class RedHeadDuck(Duck):</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.fly_behavior = FlyNoWay()</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        print &quot;read head&quot;</span><br></pre></td></tr></table></figure><h3 id="1-5-进一步封装"><a href="#1-5-进一步封装" class="headerlink" title="1.5 进一步封装"></a>1.5 进一步封装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">class RedHeadDuck(Duck):</span><br><span class="line"></span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.fly_behavior = FlyNoWay()</span><br><span class="line"></span><br><span class="line">    def display(self):</span><br><span class="line">        print &quot;read head&quot;</span><br><span class="line"></span><br><span class="line">    def set_fly_behavior(self, fly_behavior):</span><br><span class="line">        self.fly_behavior = fly_behavior</span><br></pre></td></tr></table></figure><h3 id="1-6-组合"><a href="#1-6-组合" class="headerlink" title="1.6 组合"></a>1.6 组合</h3><p>组合： 将两个类结合起来使用，类似Duck和fly_behavior。</p><p>设计原则3： 多用组合，少用继承。</p><h3 id="1-7-总结"><a href="#1-7-总结" class="headerlink" title="1.7 总结"></a>1.7 总结</h3><p>这就是第一个设计模式： 策略模式。</p><p>策略模式： 定义算法族，分别封装起来，让他们之间可以互相替换，此模式让算法的变化独立于使用算法的客户。</p><h2 id="2-共享词汇"><a href="#2-共享词汇" class="headerlink" title="2 共享词汇"></a>2 共享词汇</h2><p>通用的设计模式词汇方便沟通，熟悉的大家一说名字便知道意义。</p><p>但是不要滥用设计模式，不要在任何不需要的设计模式情况下使用设计模式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-初始&quot;&gt;&lt;a href=&quot;#1-初始&quot; class=&quot;headerlink&quot; title=&quot;1 初始&quot;&gt;&lt;/a&gt;1 初始&lt;/h2&gt;&lt;p&gt;创建一个超类Duck，所有鸭子继承它。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="设计模式" scheme="http://weihuchao.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Do As Infinity-楽园</title>
    <link href="http://weihuchao.top/2018/10/27/%E6%A5%BD%E5%9B%AD/"/>
    <id>http://weihuchao.top/2018/10/27/楽园/</id>
    <published>2018-10-27T15:16:23.000Z</published>
    <updated>2018-10-27T15:16:23.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌词"><a href="#歌词" class="headerlink" title="歌词"></a>歌词</h2><h3 id="A"><a href="#A" class="headerlink" title="A"></a>A</h3><p>誰もが皆知ってる<br>だれもがみな しってる</p><p>消せやしない傷を<br>けせやしない きずを</p><p>どれくらい　続くの？<br>どれくらい つづくの</p><p>もういらないよ<br>もう いらないよ</p><h3 id="A-1"><a href="#A-1" class="headerlink" title="A"></a>A</h3><p>誰もが皆待ってる<br>だれもがみな まってる</p><p>争いのない日々を<br>あらそいのない ひび々を</p><p>戦場の兵士たち<br>せんじょうの へいしたち</p><p>思い出してよ<br>おもいだしてよ</p><p>今母の温もりを<br>いまははのぬぐもりを</p><h3 id="B1"><a href="#B1" class="headerlink" title="B1"></a>B1</h3><p>この果てしなく広い世界に<br>このは/ てしなく/ ひろい/ せかいに</p><p>自分だけの地図描いて<br>じぶん/ だけのち/ ずえがいて</p><p>涙こらえて僕等は 歩いてゆこう<br>なみだ/ こらえて/ ぼくらは/ あるいて/ ゆこう</p><h3 id="B2"><a href="#B2" class="headerlink" title="B2"></a>B2</h3><p>立ち上がれ今ほら何度でも<br>たちあがれいま ほらな/ んどでも</p><p>眠れる獅子呼び起こして<br>ねむれ/ るししよ/ びお/ こして</p><p>生きてゆくんだ 明日へ<br>いき\ て(ゆ)\ く\ んだ あしたへ</p><h3 id="A-2"><a href="#A-2" class="headerlink" title="A"></a>A</h3><p>誰もが皆 持ってる<br>だれもがみな もってる</p><p>一欠片の　愛を<br>ひとかけらの あいを</p><p>憎んでも　何一つ<br>にくんでも なにひとつ</p><p>生まれないんだよ<br>うまれないんだよ</p><p>そんなのもういらないよ<br>そんなのもう いらないよ</p><h3 id="B1-1"><a href="#B1-1" class="headerlink" title="B1"></a>B1</h3><p>この限りある　時間の中で<br>このかぎりある じかん/ のな/ かで</p><p>まだ見ぬ　楽園目指して<br>まだみ/ ぬらくえ/ んめ/ ざして</p><p>どこまでだって　僕等は 歩いてゆこう</p><h3 id="B2-1"><a href="#B2-1" class="headerlink" title="B2"></a>B2</h3><p>振り向かないで　前だけを見て<br>ふりむかないで まえだけをみて</p><p>その身体　朽ち果てるまで<br>そのか/ らだくち/ はてるまで</p><p>生きてゆくんだ 未来へ<br>いきて\ (ゆ)く\ んだ\ みらいへ</p><h3 id="A2"><a href="#A2" class="headerlink" title="A2"></a>A2</h3><p>思い出してよ<br>おもいだしてよ</p><p>今　母の温もりを・・・<br>いま\ ははのぬ\ ぐもりを</p><h3 id="B1-2"><a href="#B1-2" class="headerlink" title="B1"></a>B1</h3><p>この果てしなく　広い世界の<br>このは\ てしなく\ ひろい\ せかいの</p><p>まだ見ぬ　楽園目指して<br>まだみ/ ぬらくえ/ んめ/ ざして</p><p>どこまでだって　僕等は 歩いてゆこう<br>どこまでだって/ ぼく/ らは/ あるいて/ ゆこう</p><h3 id="B2-2"><a href="#B2-2" class="headerlink" title="B2"></a>B2</h3><p>振り向かないで　前だけを見て<br>ふりむかないで まえだけをみて</p><p>その身体　朽ち果てるまで<br>そのか/ らだくち/ はてるまで</p><p>生きてゆくんだ 未来へ<br>いきて\ (ゆ)く\ んだ\ みらいへ</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;歌词&quot;&gt;&lt;a href=&quot;#歌词&quot; class=&quot;headerlink&quot; title=&quot;歌词&quot;&gt;&lt;/a&gt;歌词&lt;/h2&gt;&lt;h3 id=&quot;A&quot;&gt;&lt;a href=&quot;#A&quot; class=&quot;headerlink&quot; title=&quot;A&quot;&gt;&lt;/a&gt;A&lt;/h3&gt;&lt;p&gt;誰もが皆知って
      
    
    </summary>
    
      <category term="Music" scheme="http://weihuchao.top/categories/Music/"/>
    
    
      <category term="歌词" scheme="http://weihuchao.top/tags/%E6%AD%8C%E8%AF%8D/"/>
    
      <category term="音乐" scheme="http://weihuchao.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>sentry简单了解</title>
    <link href="http://weihuchao.top/2018/10/27/sentry/"/>
    <id>http://weihuchao.top/2018/10/27/sentry/</id>
    <published>2018-10-27T11:37:40.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>sentry是一个用于实时抓取程序错误栈的利器。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;sentry是一个用于实时抓取程序错误栈的利器。&lt;/p&gt;

      
    
    </summary>
    
      <category term="server" scheme="http://weihuchao.top/categories/server/"/>
    
    
      <category term="server" scheme="http://weihuchao.top/tags/server/"/>
    
      <category term="sentry" scheme="http://weihuchao.top/tags/sentry/"/>
    
  </entry>
  
  <entry>
    <title>同步和异步</title>
    <link href="http://weihuchao.top/2018/10/27/%E5%90%8C%E6%AD%A5%E5%92%8C%E5%BC%82%E6%AD%A5/"/>
    <id>http://weihuchao.top/2018/10/27/同步和异步/</id>
    <published>2018-10-27T11:37:40.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-同步模型"><a href="#1-同步模型" class="headerlink" title="1 同步模型"></a>1 同步模型</h2><p>这是最简单的编程方式。</p><p>在一个时刻，只能有一个任务在执行，并且前一个任务结束后一个任务才能开始。</p><p><img src="http://likebeta.gitbooks.io/twisted-intro-cn/content/zh/_static/p01_sync.png" alt="同步模型示意图"></p><h2 id="2-线程模型"><a href="#2-线程模型" class="headerlink" title="2 线程模型"></a>2 线程模型</h2><h3 id="2-1-进程和线程"><a href="#2-1-进程和线程" class="headerlink" title="2.1 进程和线程"></a>2.1 进程和线程</h3><p>进程是一个资源单位，现成是CPU调度单位。</p><p>程之间不共享资源，但是同一个进程下的线程是可以共享资源的。</p><h3 id="2-2-线程模型"><a href="#2-2-线程模型" class="headerlink" title="2.2 线程模型"></a>2.2 线程模型</h3><p>在这个模型中，每个任务都在单独的线程中完成。</p><p><img src="http://likebeta.gitbooks.io/twisted-intro-cn/content/zh/_static/p01_threaded.png" alt="线程模型"></p><p>这些线程都是由操作系统来管理。</p><p>若在多处理机、多核处理机的系统中可能会相互独立的运行；</p><p>若在单处理机上，则会交错运行。一个核执行一个单独的线程。</p><p>关键点在于，在线程模式中，具体哪个任务执行由操作系统来处理。</p><h2 id="3-异步编程模型"><a href="#3-异步编程模型" class="headerlink" title="3 异步编程模型"></a>3 异步编程模型</h2><h3 id="3-1-概述"><a href="#3-1-概述" class="headerlink" title="3.1 概述"></a>3.1 概述</h3><p>在这个模型中，任务是交错完成。</p><p>值得注意的是：这是在单线程的控制下。</p><p>这要比多线程模型简单多了，因为编程人员总可以认为只有一个任务在执行，而其它的在停止状态。</p><h3 id="3-2-和线程模型的区别"><a href="#3-2-和线程模型的区别" class="headerlink" title="3.2 和线程模型的区别"></a>3.2 和线程模型的区别</h3><p>典型的现成模型是各个任务并行运行，但是对于单核CPU的时候，执行方式就和异步模型类似了。</p><p>此时的区别是：</p><ul><li>线程模式中任务的切换是由操作系统决定的。</li><li>在异步模型中，任务的切换需要手动编写代码来切换任务。</li></ul><h2 id="4-阻塞"><a href="#4-阻塞" class="headerlink" title="4 阻塞"></a>4 阻塞</h2><p>如果任务都是CPU计算之类的内容， 那么实际上异步模型和同步模型消耗的时间是一样的。</p><p>但是如果任务中有阻塞（IO等操作）， 在任务阻塞的时候执行别的任务， 这样就有利于节省时间。</p><p><img src="http://likebeta.gitbooks.io/twisted-intro-cn/content/zh/_static/p01_block.png" alt="同步模型下出现阻塞"></p><p>所以异步模型至少有两个优点：</p><ul><li>针对有阻塞的任务可以加快任务完成；</li><li>针对服务来说，由于异步模型会来回切换，客户端就能够更快的接收到服务端的响应，从而减少客户端的等待时间。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-同步模型&quot;&gt;&lt;a href=&quot;#1-同步模型&quot; class=&quot;headerlink&quot; title=&quot;1 同步模型&quot;&gt;&lt;/a&gt;1 同步模型&lt;/h2&gt;&lt;p&gt;这是最简单的编程方式。&lt;/p&gt;
&lt;p&gt;在一个时刻，只能有一个任务在执行，并且前一个任务结束后一个任务才能开始
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="同步" scheme="http://weihuchao.top/tags/%E5%90%8C%E6%AD%A5/"/>
    
      <category term="异步" scheme="http://weihuchao.top/tags/%E5%BC%82%E6%AD%A5/"/>
    
  </entry>
  
  <entry>
    <title>前后端分离思想概述</title>
    <link href="http://weihuchao.top/2018/10/27/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    <id>http://weihuchao.top/2018/10/27/前后端分离/</id>
    <published>2018-10-27T11:37:40.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-MVC模型"><a href="#1-MVC模型" class="headerlink" title="1 MVC模型"></a>1 MVC模型</h2><p>全名为Model-View-Controller，即模型-视图-控制器。</p><p><img src="http://static.zybuluo.com/Rico123/et4q5o2ok4ryi6dniwifvcx0/MVC.jpg" alt="mvc模型"></p><p>不足：</p><ul><li>过程复杂。每次请求必须经过“控制器-&gt;模型-&gt;视图”这个流程，用户才能看到最终的展现的界面；</li><li>过于依赖模型。实际上视图是依赖于模型的，换句话说，如果没有模型，视图也无法呈现出最终的效果；</li><li>页面性能较差。渲染视图的过程是在服务端来完成的，最终呈现给浏览器的是带有模型的视图页面，性能无法得到很好的优化。</li></ul><h2 id="2-REST"><a href="#2-REST" class="headerlink" title="2 REST"></a>2 REST</h2><p>为了进一步改进MVC模型， 做了如下改进。</p><p>页面View全程ajax请求Controller，通过与Model交互完成json数据并且返回。</p><p><img src="http://static.zybuluo.com/Rico123/yxk2m9upgn5kzi2027d4v4z5/MVC+%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB.jpg" alt="REST"></p><p>REST全称是Representational State Transfer（表述性状态转移）。</p><p>逐渐实现概念，前后端分离。</p><p><img src="http://static.zybuluo.com/Rico123/v98uooq7qquiems7jvhdxm0c/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB.jpg" alt="前后端分离"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-MVC模型&quot;&gt;&lt;a href=&quot;#1-MVC模型&quot; class=&quot;headerlink&quot; title=&quot;1 MVC模型&quot;&gt;&lt;/a&gt;1 MVC模型&lt;/h2&gt;&lt;p&gt;全名为Model-View-Controller，即模型-视图-控制器。&lt;/p&gt;
&lt;p&gt;&lt;img s
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="前后端分离" scheme="http://weihuchao.top/tags/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%88%86%E7%A6%BB/"/>
    
      <category term="MVC" scheme="http://weihuchao.top/tags/MVC/"/>
    
      <category term="REST" scheme="http://weihuchao.top/tags/REST/"/>
    
  </entry>
  
  <entry>
    <title>python创建虚拟环境</title>
    <link href="http://weihuchao.top/2018/10/27/%E5%88%9B%E5%BB%BA%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    <id>http://weihuchao.top/2018/10/27/创建虚拟环境/</id>
    <published>2018-10-27T11:37:40.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装虚拟环境"><a href="#1-安装虚拟环境" class="headerlink" title="1 安装虚拟环境"></a>1 安装虚拟环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line">virtualenv --no-site-packages venv</span><br></pre></td></tr></table></figure><h2 id="2-进入虚拟环境"><a href="#2-进入虚拟环境" class="headerlink" title="2 进入虚拟环境"></a>2 进入虚拟环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> venv/bin/activate</span><br></pre></td></tr></table></figure><h2 id="3-安装包"><a href="#3-安装包" class="headerlink" title="3 安装包"></a>3 安装包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h2 id="4-生成需求包"><a href="#4-生成需求包" class="headerlink" title="4 生成需求包"></a>4 生成需求包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><h2 id="5-删除虚拟环境"><a href="#5-删除虚拟环境" class="headerlink" title="5 删除虚拟环境"></a>5 删除虚拟环境</h2><p>直接删除文件夹</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装虚拟环境&quot;&gt;&lt;a href=&quot;#1-安装虚拟环境&quot; class=&quot;headerlink&quot; title=&quot;1 安装虚拟环境&quot;&gt;&lt;/a&gt;1 安装虚拟环境&lt;/h2&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cla
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="虚拟环境" scheme="http://weihuchao.top/tags/%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>设置Mac</title>
    <link href="http://weihuchao.top/2018/10/27/%E8%AE%BE%E7%BD%AEmac/"/>
    <id>http://weihuchao.top/2018/10/27/设置mac/</id>
    <published>2018-10-27T11:37:40.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-设置launchpad的展示方式"><a href="#1-设置launchpad的展示方式" class="headerlink" title="1 设置launchpad的展示方式"></a>1 设置launchpad的展示方式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">defaults write com.apple.dock springboard-columns -int 12</span><br><span class="line">defaults write com.apple.dock springboard-rows -int 8</span><br><span class="line">defaults write com.apple.dock ResetLaunchPad -bool TRUE</span><br><span class="line">killall Dock</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-设置launchpad的展示方式&quot;&gt;&lt;a href=&quot;#1-设置launchpad的展示方式&quot; class=&quot;headerlink&quot; title=&quot;1 设置launchpad的展示方式&quot;&gt;&lt;/a&gt;1 设置launchpad的展示方式&lt;/h2&gt;&lt;figure c
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Mac" scheme="http://weihuchao.top/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Rector模式概述</title>
    <link href="http://weihuchao.top/2018/10/27/reactor%E6%A8%A1%E5%BC%8F/"/>
    <id>http://weihuchao.top/2018/10/27/reactor模式/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-异步请求的客户端"><a href="#1-异步请求的客户端" class="headerlink" title="1 异步请求的客户端"></a>1 异步请求的客户端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_poetry</span><span class="params">(sockets)</span>:</span></span><br><span class="line">    <span class="string">"""Download poety from all the given sockets."""</span></span><br><span class="line"></span><br><span class="line">    poems = dict.fromkeys(sockets, <span class="string">''</span>) <span class="comment"># socket -&gt; accumulated poem</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># socket -&gt; task numbers</span></span><br><span class="line">    sock2task = dict([(s, i + <span class="number">1</span>) <span class="keyword">for</span> i, s <span class="keyword">in</span> enumerate(sockets)])</span><br><span class="line"></span><br><span class="line">    sockets = list(sockets) <span class="comment"># make a copy</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># we go around this loop until we've gotten all the poetry</span></span><br><span class="line">    <span class="comment"># from all the sockets. This is the 'reactor loop'.</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> sockets:</span><br><span class="line">        <span class="comment"># this select call blocks until one or more of the</span></span><br><span class="line">        <span class="comment"># sockets is ready for read I/O</span></span><br><span class="line">        rlist, _, _ = select.select(sockets, [], [])</span><br><span class="line"></span><br><span class="line">        <span class="comment"># rlist is the list of sockets with data ready to read</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> sock <span class="keyword">in</span> rlist:</span><br><span class="line">            data = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    new_data = sock.recv(<span class="number">1024</span>)</span><br><span class="line">                <span class="keyword">except</span> socket.error, e:</span><br><span class="line">                    <span class="keyword">if</span> e.args[<span class="number">0</span>] == errno.EWOULDBLOCK:</span><br><span class="line">                        <span class="comment"># this error code means we would have</span></span><br><span class="line">                        <span class="comment"># blocked if the socket was blocking.</span></span><br><span class="line">                        <span class="comment"># instead we skip to the next socket</span></span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">raise</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="keyword">if</span> <span class="keyword">not</span> new_data:</span><br><span class="line">                        <span class="keyword">break</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        data += new_data</span><br><span class="line"></span><br><span class="line">            <span class="comment"># Each execution of this inner loop corresponds to</span></span><br><span class="line">            <span class="comment"># working on one asynchronous task in Figure 3 here:</span></span><br><span class="line">            <span class="comment"># http://krondo.com/?p=1209#figure3</span></span><br><span class="line"></span><br><span class="line">            task_num = sock2task[sock]</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">                sockets.remove(sock)</span><br><span class="line">                sock.close()</span><br><span class="line">                <span class="keyword">print</span> <span class="string">'Task %d finished'</span> % task_num</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                addr_fmt = format_address(sock.getpeername())</span><br><span class="line">                msg = <span class="string">'Task %d: got %d bytes of poetry from %s'</span></span><br><span class="line">                <span class="keyword">print</span>  msg % (task_num, len(data), addr_fmt)</span><br><span class="line"></span><br><span class="line">            poems[sock] += data</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> poems</span><br></pre></td></tr></table></figure><ol><li>异步模式客户端一次性与全部服务器完成连接，而不像同步模式那样一次只连接一个。</li><li>用来进行通信的Socket方法是非阻塞模的，这是通过调用setblocking(0)来实现的。</li><li>select模块中的select方法是用来识别其监视的socket是否有完成数据接收的，如果没有它就处于阻塞状态。</li><li>使用select函数等待所有Socket，直到至少有一个socket有数据到来。</li><li>对每个有数据需要读取的socket，从中读取数据。但仅仅只是读取有效数据，不能为了等待还没来到的数据而发生阻塞。</li><li>由于不断发送， 有可能</li></ol><h2 id="2-reactor模式"><a href="#2-reactor模式" class="headerlink" title="2 reactor模式"></a>2 reactor模式</h2><p>这种，等待事件到来，然后对事件进行处理，处理完毕之后又继续等待事件到来的模型， 就被故写成了reactor模式。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-异步请求的客户端&quot;&gt;&lt;a href=&quot;#1-异步请求的客户端&quot; class=&quot;headerlink&quot; title=&quot;1 异步请求的客户端&quot;&gt;&lt;/a&gt;1 异步请求的客户端&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Rector" scheme="http://weihuchao.top/tags/Rector/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://weihuchao.top/2018/10/27/git%E5%BF%BD%E7%95%A5%E6%96%87%E4%BB%B6/"/>
    <id>http://weihuchao.top/2018/10/27/git忽略文件/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="匹配写法"><a href="#匹配写法" class="headerlink" title="匹配写法"></a>匹配写法</h2><h3 id="后缀"><a href="#后缀" class="headerlink" title="后缀"></a>后缀</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*.log</span><br></pre></td></tr></table></figure><h3 id="文件夹"><a href="#文件夹" class="headerlink" title="文件夹"></a>文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/venv</span><br></pre></td></tr></table></figure><h3 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">*.a             表示忽略所有 .a 结尾的文件</span><br><span class="line">!lib.a          表示但lib.a除外</span><br><span class="line">/TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO</span><br><span class="line">build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；</span><br><span class="line">doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt</span><br><span class="line"> </span><br><span class="line">bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件</span><br><span class="line">/bin:           表示忽略根目录下的bin文件</span><br><span class="line">/*.c:           表示忽略cat.c，不忽略 build/cat.c</span><br><span class="line">debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj</span><br><span class="line">**/foo:         表示忽略/foo,a/foo,a/b/foo等</span><br><span class="line">a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等</span><br><span class="line">!/bin/run.sh    表示不忽略bin目录下的run.sh文件</span><br><span class="line">*.log:          表示忽略所有 .log 文件</span><br><span class="line">config.php:     表示忽略当前路径的 config.php 文件</span><br><span class="line"> </span><br><span class="line">/mtk/           表示过滤整个文件夹</span><br><span class="line">*.zip           表示过滤所有.zip文件</span><br><span class="line">/mtk/do.c       表示过滤某个具体文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;匹配写法&quot;&gt;&lt;a href=&quot;#匹配写法&quot; class=&quot;headerlink&quot; title=&quot;匹配写法&quot;&gt;&lt;/a&gt;匹配写法&lt;/h2&gt;&lt;h3 id=&quot;后缀&quot;&gt;&lt;a href=&quot;#后缀&quot; class=&quot;headerlink&quot; title=&quot;后缀&quot;&gt;&lt;/a&gt;后缀&lt;/h
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker学习笔记</title>
    <link href="http://weihuchao.top/2018/10/27/docker%E7%AC%94%E8%AE%B0/"/>
    <id>http://weihuchao.top/2018/10/27/docker笔记/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1 安装"></a>1 安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install docker</span><br></pre></td></tr></table></figure><p>需要下载安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://store.docker.com/editions/community/docker-ce-desktop-mac</span><br></pre></td></tr></table></figure><h2 id="2-使用"><a href="#2-使用" class="headerlink" title="2 使用"></a>2 使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ docker --version</span><br><span class="line">Docker version 18.03, build c97c6d6</span><br><span class="line"></span><br><span class="line">$ docker-compose --version</span><br><span class="line">docker-compose version 1.22.0, build 8dd22a9</span><br><span class="line"></span><br><span class="line">$ docker-machine --version</span><br><span class="line">docker-machine version 0.14.0, build 9ba6da9</span><br><span class="line"></span><br><span class="line">$ docker run hello-world</span><br><span class="line"></span><br><span class="line">$ docker run -d -p 80:80 --name webserver nginx</span><br><span class="line"># 80:80 前面是docker外面环境使用的端口 后面是docker内部使用的端口</span><br><span class="line"># 需要使用-p来指定端口</span><br><span class="line"></span><br><span class="line">$ docker container ls</span><br><span class="line">$ docker container stop webserver</span><br><span class="line">$ docker container ls -a</span><br><span class="line">$ docker container rm webserver</span><br><span class="line">$ docker image ls</span><br><span class="line">$ docker image rm nginx</span><br></pre></td></tr></table></figure><h3 id="2-1-创建一个Container"><a href="#2-1-创建一个Container" class="headerlink" title="2.1 创建一个Container"></a>2.1 创建一个Container</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir docker_file</span><br><span class="line"><span class="built_in">cd</span> docker_file</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">vim Dockerfile</span><br><span class="line"></span><br><span class="line"># Use an official Python runtime as a parent image</span><br><span class="line">FROM python:2.7-slim</span><br><span class="line"></span><br><span class="line"># Set the working directory to /app</span><br><span class="line">WORKDIR /app</span><br><span class="line"></span><br><span class="line"># Copy the current directory contents into the container at /app</span><br><span class="line">COPY . /app</span><br><span class="line"></span><br><span class="line"># Install any needed packages specified in requirements.txt</span><br><span class="line">RUN pip install --trusted-host pypi.python.org -r requirements.txt</span><br><span class="line"></span><br><span class="line"># Make port 80 available to the world outside this container</span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"># Define environment variable</span><br><span class="line">ENV NAME World</span><br><span class="line"></span><br><span class="line"># Run app.py when the container launches</span><br><span class="line">CMD [&quot;python&quot;, &quot;app.py&quot;]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim requirements.txt</span><br><span class="line"></span><br><span class="line">Flask</span><br><span class="line">Redis</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">vim app.py</span><br><span class="line"></span><br><span class="line">from flask import Flask</span><br><span class="line">from redis import Redis, RedisError</span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line"># Connect to Redis</span><br><span class="line">redis = Redis(host=&quot;redis&quot;, db=0, socket_connect_timeout=2, socket_timeout=2)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">@app.route(&quot;/&quot;)</span><br><span class="line">def hello():</span><br><span class="line">    try:</span><br><span class="line">        visits = redis.incr(&quot;counter&quot;)</span><br><span class="line">    except RedisError:</span><br><span class="line">        visits = &quot;&lt;i&gt;cannot connect to Redis, counter disabled&lt;/i&gt;&quot;</span><br><span class="line"></span><br><span class="line">    html = &quot;&lt;h3&gt;Hello &#123;name&#125;!&lt;/h3&gt;&quot; \</span><br><span class="line">           &quot;&lt;b&gt;Hostname:&lt;/b&gt; &#123;hostname&#125;&lt;br/&gt;&quot; \</span><br><span class="line">           &quot;&lt;b&gt;Visits:&lt;/b&gt; &#123;visits&#125;&quot;</span><br><span class="line">    return html.format(name=os.getenv(&quot;NAME&quot;, &quot;world&quot;), hostname=socket.gethostname(), visits=visits)</span><br><span class="line"></span><br><span class="line">if __name__ == &quot;__main__&quot;:</span><br><span class="line">    app.run(host=&apos;0.0.0.0&apos;, port=80)</span><br></pre></td></tr></table></figure><p>创建container</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t friendlyhello .</span><br></pre></td></tr></table></figure><p>运行app</p><p>其中-p用于绑定端口，4000:80 前面是docker外面环境使用的端口，后面是docker内部使用的端口。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 4000:80 friendlyhello</span><br></pre></td></tr></table></figure><p>后台运行app</p><p>使用-d， 可以合在一起写<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 4000:80 friendlyhello</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">➜  docker_file docker run -dp 4000:80 friendlyhello</span><br><span class="line">bfc28faf20c23567d7a83667f2040c1469d6adae00ffe45257f494c72e778efe</span><br><span class="line">➜  docker_file docker container ls</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                  NAMES</span><br><span class="line">bfc28faf20c2        friendlyhello       &quot;python app.py&quot;     48 seconds ago      Up 46 seconds       0.0.0.0:4000-&gt;80/tcp   xenodochial_jackson</span><br><span class="line">➜  docker_file docker container stop bfc28faf20c2</span><br><span class="line">bfc28faf20c2</span><br></pre></td></tr></table></figure><p>发布到远程并且使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">➜  docker_file docker login</span><br><span class="line">Authenticating with existing credentials...</span><br><span class="line">Login Succeeded</span><br><span class="line">➜  docker_file docker tag friendlyhello weihuchao/get-started:part1</span><br><span class="line">➜  docker_file docker image ls</span><br><span class="line">REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">friendlyhello           latest              13f8513def89        28 minutes ago      132MB</span><br><span class="line">weihuchao/get-started   part1               13f8513def89        28 minutes ago      132MB</span><br><span class="line">nginx                   latest              bc26f1ed35cf        4 days ago          109MB</span><br><span class="line">hello-world             latest              4ab4c602aa5e        3 weeks ago         1.84kB</span><br><span class="line">ubuntu                  latest              cd6d8154f1e1        3 weeks ago         84.1MB</span><br><span class="line">python                  2.7-slim            c9cde4658340        3 weeks ago         120MB</span><br><span class="line">➜  docker_file docker push weihuchao/get-started:part1</span><br><span class="line">The push refers to repository [docker.io/weihuchao/get-started]</span><br><span class="line">07c6549b588a: Pushed</span><br><span class="line">033e409ef04e: Pushed</span><br><span class="line">3e9874f94f33: Pushed</span><br><span class="line">d509372bacf0: Mounted from library/python</span><br><span class="line">18cc3d97f405: Mounted from library/python</span><br><span class="line">80db77e224a0: Mounted from library/python</span><br><span class="line">8b15606a9e3e: Mounted from library/python</span><br><span class="line">part1: digest: sha256:7c038d51ed3bee7f6bce70489f996a0a53ac050e112eff348a6419cc61beacd4 size: 1787</span><br><span class="line">➜  docker_file docker run -p 4000:80 weihuchao/get-started:part1</span><br><span class="line"> * Serving Flask app &quot;app&quot; (lazy loading)</span><br><span class="line"> * Environment: production</span><br><span class="line">   WARNING: Do not use the development server in a production environment.</span><br><span class="line">   Use a production WSGI server instead.</span><br><span class="line"> * Debug mode: off</span><br><span class="line"> * Running on http://0.0.0.0:80/ (Press CTRL+C to quit)</span><br></pre></td></tr></table></figure><p>用到的命令总结</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker build -t friendlyhello .  # Create image using this directory&apos;s Dockerfile</span><br><span class="line">docker run -p 4000:80 friendlyhello  # Run &quot;friendlyname&quot; mapping port 4000 to 80</span><br><span class="line">docker run -d -p 4000:80 friendlyhello         # Same thing, but in detached mode</span><br><span class="line">docker container ls                                # List all running containers</span><br><span class="line">docker container ls -a             # List all containers, even those not running</span><br><span class="line">docker container stop &lt;hash&gt;           # Gracefully stop the specified container</span><br><span class="line">docker container kill &lt;hash&gt;         # Force shutdown of the specified container</span><br><span class="line">docker container rm &lt;hash&gt;        # Remove specified container from this machine</span><br><span class="line">docker container rm $(docker container ls -a -q)         # Remove all containers</span><br><span class="line">docker image ls -a                             # List all images on this machine</span><br><span class="line">docker image rm &lt;image id&gt;            # Remove specified image from this machine</span><br><span class="line">docker image rm $(docker image ls -a -q)   # Remove all images from this machine</span><br><span class="line">docker login             # Log in this CLI session using your Docker credentials</span><br><span class="line">docker tag &lt;image&gt; username/repository:tag  # Tag &lt;image&gt; for upload to registry</span><br><span class="line">docker push username/repository:tag            # Upload tagged image to registry</span><br><span class="line">docker run username/repository:tag                   # Run image from a registry</span><br></pre></td></tr></table></figure><h3 id="2-2-服务"><a href="#2-2-服务" class="headerlink" title="2.2 服务"></a>2.2 服务</h3><p>对于分布式程序， 每个分片就是一个服务。</p><p>创建一个compose文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">➜  docker_file vim docker-compose.yml</span><br><span class="line">➜  docker_file cat docker-compose.yml</span><br><span class="line">version: &quot;3&quot;</span><br><span class="line">services:</span><br><span class="line">  web:</span><br><span class="line">    # replace username/repo:tag with your name and image details</span><br><span class="line">    image: weihuchao/get-started:part1</span><br><span class="line">    deploy:</span><br><span class="line">      replicas: 5</span><br><span class="line">      resources:</span><br><span class="line">        limits:</span><br><span class="line">          cpus: &quot;0.1&quot;</span><br><span class="line">          memory: 50M</span><br><span class="line">      restart_policy:</span><br><span class="line">        condition: on-failure</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;4000:80&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - webnet</span><br><span class="line">networks:</span><br><span class="line">  webnet:</span><br></pre></td></tr></table></figure><ul><li>创建一个名为web的服务，运行5个实例。</li><li>一旦失败就重启</li><li>端口配置和之前的一致</li><li>通过名为webnet的负载均衡来进行负载均衡</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">➜  docker_file docker swarm init</span><br><span class="line">Swarm initialized: current node (u3dqg55kw2zuznsl8mkkoj0y4) is now a manager.</span><br><span class="line"></span><br><span class="line">To add a worker to this swarm, run the following command:</span><br><span class="line"></span><br><span class="line">    docker swarm join --token SWMTKN-1-1y7qkerfds031krhu1xry1jrxdiz5k7h2pxh6n9ue0xv9ccnta-70p3h13q9kje8ipbw4hd65wcg 192.168.65.3:2377</span><br><span class="line"></span><br><span class="line">To add a manager to this swarm, run &apos;docker swarm join-token manager&apos; and follow the instructions.</span><br><span class="line"></span><br><span class="line">➜  docker_file docker stack deploy -c docker-compose.yml getstartedlab</span><br><span class="line">Creating network getstartedlab_webnet</span><br><span class="line">Creating service getstartedlab_web</span><br><span class="line">➜  docker_file docker ps</span><br><span class="line">CONTAINER ID        IMAGE                         COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">d877cae608ad        weihuchao/get-started:part1   &quot;python app.py&quot;     8 seconds ago       Up 5 seconds        80/tcp              getstartedlab_web.2.ptnydvr11qh3pf6sojrp3w4c3</span><br><span class="line">1f5ec4db337b        weihuchao/get-started:part1   &quot;python app.py&quot;     8 seconds ago       Up 5 seconds        80/tcp              getstartedlab_web.5.clqmpbuxb3eara40eoj9uvkzi</span><br><span class="line">afdc3314b63b        weihuchao/get-started:part1   &quot;python app.py&quot;     8 seconds ago       Up 5 seconds        80/tcp              getstartedlab_web.4.tvhwox2d1r5zjds985mety0oj</span><br><span class="line">d4ca340faa6a        weihuchao/get-started:part1   &quot;python app.py&quot;     8 seconds ago       Up 5 seconds        80/tcp              getstartedlab_web.1.wd6dr71vlg84cxpla1g3l7vgh</span><br><span class="line">976e5e62ef00        weihuchao/get-started:part1   &quot;python app.py&quot;     8 seconds ago       Up 6 seconds        80/tcp              getstartedlab_web.3.2085k2dvw7q4lgyf5opjn5vqf</span><br><span class="line">➜  docker_file docker service ls</span><br><span class="line">ID                  NAME                MODE                REPLICAS            IMAGE                         PORTS</span><br><span class="line">xfmdeis99zj7        getstartedlab_web   replicated          5/5                 weihuchao/get-started:part1   *:4000-&gt;80/tcp</span><br><span class="line">➜  docker_file docker service ps getstartedlab_web</span><br><span class="line">ID                  NAME                  IMAGE                         NODE                    DESIRED STATE       CURRENT STATE           ERROR               PORTS</span><br><span class="line">wd6dr71vlg84        getstartedlab_web.1   weihuchao/get-started:part1   linuxkit-025000000001   Running             Running 2 minutes ago</span><br><span class="line">ptnydvr11qh3        getstartedlab_web.2   weihuchao/get-started:part1   linuxkit-025000000001   Running             Running 2 minutes ago</span><br><span class="line">2085k2dvw7q4        getstartedlab_web.3   weihuchao/get-started:part1   linuxkit-025000000001   Running             Running 2 minutes ago</span><br><span class="line">tvhwox2d1r5z        getstartedlab_web.4   weihuchao/get-started:part1   linuxkit-025000000001   Running             Running 2 minutes ago</span><br><span class="line">clqmpbuxb3ea        getstartedlab_web.5   weihuchao/get-started:part1   linuxkit-025000000001   Running             Running 2 minutes ago</span><br><span class="line">➜  docker_file docker container ls -q</span><br><span class="line">d877cae608ad</span><br><span class="line">1f5ec4db337b</span><br><span class="line">afdc3314b63b</span><br><span class="line">d4ca340faa6a</span><br><span class="line">976e5e62ef00</span><br><span class="line">➜  docker_file docker stack rm getstartedlab</span><br><span class="line">Removing service getstartedlab_web</span><br><span class="line">Removing network getstartedlab_webnet</span><br><span class="line">➜  docker_file docker swarm leave --force</span><br><span class="line">Node left the swarm.</span><br></pre></td></tr></table></figure><p>需要先创建swarm， 在deploy。</p><p>通过负载均衡来访问集群中的不同的服务，不断访问主页可以看到有可能每次访问得到的hostname都是不同的。</p><p>用到的命令集合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker stack ls                                            # List stacks or apps</span><br><span class="line">docker stack deploy -c &lt;composefile&gt; &lt;appname&gt;  # Run the specified Compose file</span><br><span class="line">docker service ls                 # List running services associated with an app</span><br><span class="line">docker service ps &lt;service&gt;                  # List tasks associated with an app</span><br><span class="line">docker inspect &lt;task or container&gt;                   # Inspect task or container</span><br><span class="line">docker container ls -q                                      # List container IDs</span><br><span class="line">docker stack rm &lt;appname&gt;                             # Tear down an application</span><br><span class="line">docker swarm leave --force      # Take down a single node swarm from the manager</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-安装&quot;&gt;&lt;a href=&quot;#1-安装&quot; class=&quot;headerlink&quot; title=&quot;1 安装&quot;&gt;&lt;/a&gt;1 安装&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="docker" scheme="http://weihuchao.top/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>python脚本传入参数解析之optparse</title>
    <link href="http://weihuchao.top/2018/10/27/optparse%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/"/>
    <id>http://weihuchao.top/2018/10/27/optparse的使用方法/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-引入"><a href="#1-引入" class="headerlink" title="1 引入"></a>1 引入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> optparse</span><br></pre></td></tr></table></figure><h2 id="2-创建使用说明"><a href="#2-创建使用说明" class="headerlink" title="2 创建使用说明"></a>2 创建使用说明</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">usage = <span class="string">"""</span></span><br><span class="line"><span class="string">This is usage</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">parser = optparse.OptionParser(usage)</span><br></pre></td></tr></table></figure><h2 id="3-创建指定参数"><a href="#3-创建指定参数" class="headerlink" title="3 创建指定参数"></a>3 创建指定参数</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">help = <span class="string">"The interface to listen on. Default is localhost."</span></span><br><span class="line">parser.add_option(<span class="string">'--iface'</span>, help=help, default=<span class="string">'localhost'</span>)</span><br></pre></td></tr></table></figure><p>关于add_option函数， 第一个参数需要是<code>--name</code>，name用于之后调用的名字， 也是命令输入需要输入的名字。</p><p>可以设置帮助信息（help）和默认值（default）。</p><h2 id="4-解析输入"><a href="#4-解析输入" class="headerlink" title="4 解析输入"></a>4 解析输入</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">options, args = parser.parse_args()</span><br></pre></td></tr></table></figure><p><code>parse_args()</code>函数有两个返回值，一个是指定的可选参数，一个是正常输入的所有参数。</p><p>其中可选参数可以通过<code>options.name</code>的方式调用得到该值。</p><h2 id="5-出错退出程序"><a href="#5-出错退出程序" class="headerlink" title="5 出错退出程序"></a>5 出错退出程序</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">parser.exit()</span><br></pre></td></tr></table></figure><p>可以传入参数<code>msg</code>来输出错误信息。执行该句之后程序退出。</p><h2 id="6-范例"><a href="#6-范例" class="headerlink" title="6 范例"></a>6 范例</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">parse_args</span><span class="params">()</span>:</span></span><br><span class="line">    usage = <span class="string">"""usage: %prog [options] poetry-file</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">This is the Slow Poetry Server, blocking edition.</span></span><br><span class="line"><span class="string">Run it like this:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  python slowpoetry.py &lt;path-to-poetry-file&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you are in the base directory of the twisted-intro package,</span></span><br><span class="line"><span class="string">you could run it like this:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  python blocking-server/slowpoetry.py poetry/ecstasy.txt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">to serve up John Donne's Ecstasy, which I know you want to do.</span></span><br><span class="line"><span class="string">"""</span></span><br><span class="line"></span><br><span class="line">    parser = optparse.OptionParser(usage)</span><br><span class="line"></span><br><span class="line">    help = <span class="string">"The port to listen on. Default to a random available port."</span></span><br><span class="line">    parser.add_option(<span class="string">'--port'</span>, type=<span class="string">'int'</span>, help=help)</span><br><span class="line"></span><br><span class="line">    help = <span class="string">"The interface to listen on. Default is localhost."</span></span><br><span class="line">    parser.add_option(<span class="string">'--iface'</span>, help=help, default=<span class="string">'localhost'</span>)</span><br><span class="line"></span><br><span class="line">    help = <span class="string">"The number of seconds between sending bytes."</span></span><br><span class="line">    parser.add_option(<span class="string">'--delay'</span>, type=<span class="string">'float'</span>, help=help, default=<span class="number">.7</span>)</span><br><span class="line"></span><br><span class="line">    help = <span class="string">"The number of bytes to send at a time."</span></span><br><span class="line">    parser.add_option(<span class="string">'--num-bytes'</span>, type=<span class="string">'int'</span>, help=help, default=<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line">    options, args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(args) != <span class="number">1</span>:</span><br><span class="line">        parser.error(<span class="string">'Provide exactly one poetry file.'</span>)</span><br><span class="line"></span><br><span class="line">    poetry_file = args[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(args[<span class="number">0</span>]):</span><br><span class="line">        parser.error(<span class="string">'No such file: %s'</span> % poetry_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> options, poetry_file</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    options, poetry_file= parse_args()</span><br><span class="line"></span><br><span class="line">    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">    sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class="number">1</span>)</span><br><span class="line">    sock.bind((options.iface, options.port <span class="keyword">or</span> <span class="number">0</span>))</span><br><span class="line"></span><br><span class="line">    sock.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'Serving %s on port %s.'</span> % (poetry_file, sock.getsockname()[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">    serve(sock, poetry_file, options.num_bytes, options.delay)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-引入&quot;&gt;&lt;a href=&quot;#1-引入&quot; class=&quot;headerlink&quot; title=&quot;1 引入&quot;&gt;&lt;/a&gt;1 引入&lt;/h2&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;p
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="optparse" scheme="http://weihuchao.top/tags/optparse/"/>
    
  </entry>
  
  <entry>
    <title>amazing trees-泽野弘之</title>
    <link href="http://weihuchao.top/2018/10/27/amazing%20trees%20-%20%E6%B3%BD%E9%87%8E%E5%BC%98%E4%B9%8B/"/>
    <id>http://weihuchao.top/2018/10/27/amazing trees - 泽野弘之/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="平假名歌词"><a href="#平假名歌词" class="headerlink" title="平假名歌词"></a>平假名歌词</h2><p>僕はホコリだけの答えを見つけた顔しながら<br>ぼくはホコリ(hokori)だけのこたえを みつけたかおしながら</p><p>外で本当の言葉を置き忘れていたんだ<br>そとでほんとうのことばを おきわすれていたんだ</p><p>裏返しの過去に明かりを照らしてても<br>うらがえしのかこに　あかりをしょうらしてても</p><p>誤魔化したこれまでの声が横で目を覚ます<br>ごまかしたこれまでのこえが　おうでめをさます</p><p>走り出すのが 当たり前だったと うろ覚えなふりを<br>はしりたすのが　あたりまえだったと　うろおぼえなふりを</p><p>時に濡れた道の砂が靴の底に詰まる<br>ときに　ぬれた　みちの　すなが　くつの　そこに　つまる</p><p>振り落とせば出れる路地<br>ふりおとせば　でれるろじ</p><p>Getting me all upset I just wanna be free<br>I couldn’t!<br>Truth that I have been hiding, it’s so hard to see<br>You’ve been getting me all upset I have fallen too far!<br>I couldn’t grow the way I’ve been wanting<br>You know who you are!<br>We’re all amazing trees reaching up to the stars<br>Though we’re no longer children they sing in our hearts<br>We know the time that’s passing is not everlasting<br>Stop telling yourself the lies<br>I wanna change</p><p>それはずれた祈りをかわしまた後ろに近づく<br>それはずれたいのりをかわし またうしろにちかづく</p><p>あの日出逢った喜びを無邪気に掲げながら<br>あのひであったよろこびを　むじゃきにかかけながら</p><p>迷路に似たような怖さと期待の影<br>めいろににたような　こわさときたいのかげ</p><p>これが最後みたいな風通るのは街のせいじゃない<br>これがさいごみたいなかぜとおるのは　まちのせいじゃない</p><p>泣き出した日が 立つ未来選んだ スローペースと向き合う<br>なきだしたひが　たちつみらいえらんだ　スローペースとむきあう</p><p>焦る月が惑わす空で通り雨に打たれる<br>あせる　つきが　まどわす　そらで　とおり　あめに　うたれる</p><p>幼い日々が 直線を歌う<br>おさないひが　ちょくせんをうたう</p><p>Getting me all upset I just wanna be free<br>I couldn’t!<br>Truth that I have been hiding, it’s so hard to see<br>You’ve been getting me all upset I have fallen too far!<br>I couldn’t grow the way I’ve been wanting<br>You know who you are!<br>We’re all amazing trees reaching up to the stars<br>Though we’re no longer children they sing in our hearts<br>We know the time that’s passing is not everlasting<br>Stop telling yourself the lies<br>I wanna change<br>Amazing trees, amazing trees</p><p>空側に眺めた色は<br>そながわに　ながめたいろは</p><p>影さえ消えた雑じり気ないold &amp; new<br>かげさえきえた　まじりき(え?)ない　old &amp; new　</p><p>Getting me all upset I just wanna be free<br>I couldn’t!<br>Truth that I have been hiding, it’s so hard to see<br>You’ve been getting me all upset I have fallen too far!<br>I couldn’t grow the way I’ve been wanting<br>You know who you are!<br>We’re all amazing trees reaching up to the stars<br>Though we’re no longer children they sing in our hearts<br>We know the time that’s passing is not everlasting<br>Stop telling yourself the lies<br>I wanna change</p><h2 id="参考内容"><a href="#参考内容" class="headerlink" title="参考内容"></a>参考内容</h2><ul><li>歌词来源： <a href="http://j-lyric.net/artist/a05b956/l042861.html" target="_blank" rel="noopener">http://j-lyric.net/artist/a05b956/l042861.html</a></li><li>汉字翻译： <a href="https://kanji.jitenon.jp/" target="_blank" rel="noopener">https://kanji.jitenon.jp/</a></li><li>翻译： <a href="https://dictionary.goo.ne.jp/jn/" target="_blank" rel="noopener">https://dictionary.goo.ne.jp/jn/</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;平假名歌词&quot;&gt;&lt;a href=&quot;#平假名歌词&quot; class=&quot;headerlink&quot; title=&quot;平假名歌词&quot;&gt;&lt;/a&gt;平假名歌词&lt;/h2&gt;&lt;p&gt;僕はホコリだけの答えを見つけた顔しながら&lt;br&gt;ぼくはホコリ(hokori)だけのこたえを みつけたかおしながら&lt;/
      
    
    </summary>
    
      <category term="Music" scheme="http://weihuchao.top/categories/Music/"/>
    
    
      <category term="歌词" scheme="http://weihuchao.top/tags/%E6%AD%8C%E8%AF%8D/"/>
    
      <category term="音乐" scheme="http://weihuchao.top/tags/%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Hello World！</title>
    <link href="http://weihuchao.top/2018/10/27/Helloworld/"/>
    <id>http://weihuchao.top/2018/10/27/Helloworld/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>国际惯例，第一篇送Hello World。</p><h2 id="1-此刻"><a href="#1-此刻" class="headerlink" title="1 此刻"></a>1 此刻</h2><p>每个人都有自己独特之处，或许在尝试某一件事情的时候， 你就会发现你或许比别人在这件事情上更加的游刃有余，或许是学的更快，或许是学得更牢。  </p><p>小时候，还记得我对文字的感受力，或许我记得不牢，但是我脑子里能突然浮现一下不曾接触的词语和概念。</p><p>那时我以为是潜移默化，也感叹人类的传承。  </p><p>时至今日，那样少有的灵性已经不再。 </p><p>更多的是，疲于奔命，安于现状。  </p><h2 id="2-习惯"><a href="#2-习惯" class="headerlink" title="2 习惯"></a>2 习惯</h2><p>我有一个不好的习惯， 总是我脑内限定的条件下执行某一件事情。</p><p>比如说我可能会需要一个更大的屏幕来显示，借此我才能够看到完整的一个网页，这样我就可以心满意足的去强化记忆网页当中的知识。</p><p>同样记笔记也是，我总是努力保证自己的笔记的格式是最好最清晰的， 这样才能方便我下次阅读。然而事实是由于我为了做到排版精致的笔记，可能会在同一个知识点上浪费过多的时间，且专注点还不在知识点上。后果就是我花了一些“无用”去完成熟记知识点的前提，效率甚低。最可怕的是，或许我会对自己的笔记产生厌恶，因而对阅读笔记毫无欲望…</p><h2 id="3-改变"><a href="#3-改变" class="headerlink" title="3 改变"></a>3 改变</h2><p>我知道，从很小就发现我和别人的脑回路不一样。</p><p>但是人始终是立足于社会的。我正努力改变自己，让自己更加适应社会，不显得那么突兀。</p><p>于是， 在改变前，我为自己又“谋划”了新的条件。</p><h2 id="4-520"><a href="#4-520" class="headerlink" title="4 520"></a>4 520</h2><p>很羡慕， 非常羡慕那些能够遇到志同道合，气味相投的另一半还幸福的在一起的人。</p><p>很遗憾，我曾经遇到过那样的人。不过理智告诉我，不是因为别人适合我，而是别人足够优秀。</p><p>但是遗憾的人生还要继续，还是微笑着努力变得优秀吧。</p><p>520，iMac，我给我自己送的礼物，希望我喜欢，希望我能迈出心里上的第一步。</p><h2 id="5-秘密"><a href="#5-秘密" class="headerlink" title="5 秘密"></a>5 秘密</h2><p>我有一个小秘密，我同样为自己“设立”了一个条件。</p><p>希望有一天我能说出来。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;国际惯例，第一篇送Hello World。&lt;/p&gt;
&lt;h2 id=&quot;1-此刻&quot;&gt;&lt;a href=&quot;#1-此刻&quot; class=&quot;headerlink&quot; title=&quot;1 此刻&quot;&gt;&lt;/a&gt;1 此刻&lt;/h2&gt;&lt;p&gt;每个人都有自己独特之处，或许在尝试某一件事情的时候， 你就会发现你
      
    
    </summary>
    
      <category term="随笔" scheme="http://weihuchao.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="随笔" scheme="http://weihuchao.top/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>git进阶之git-flow</title>
    <link href="http://weihuchao.top/2018/10/27/git-flow/"/>
    <id>http://weihuchao.top/2018/10/27/git-flow/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-git-flow"><a href="#1-git-flow" class="headerlink" title="1 git flow"></a>1 git flow</h2><p>Git flow script是基于git flow概念的一个帮助我们快速使用该思想的脚本。</p><h2 id="2-安装"><a href="#2-安装" class="headerlink" title="2 安装"></a>2 安装</h2><p>OS X<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git-flow</span><br></pre></td></tr></table></figure></p><p>Linux<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git-flow</span><br></pre></td></tr></table></figure></p><p>Windows<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -q -O - --no-check-certificate https://github.com/nvie/gitflow/raw/develop/contrib/gitflow-installer.sh | bash</span><br></pre></td></tr></table></figure></p><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3 使用"></a>3 使用</h2><p>初始化: git flow init</p><p>开始新Feature: git flow feature start MYFEATURE</p><p>Publish一个Feature(也就是push到远程): git flow feature publish MYFEATURE</p><p>获取Publish的Feature: git flow feature pull origin MYFEATURE</p><p>完成一个Feature: git flow feature finish MYFEATURE</p><p>开始一个Release: git flow release start RELEASE [BASE]</p><p>Publish一个Release: git flow release publish RELEASE<br>发布Release: git flow release finish RELEASE<br>别忘了git push –tags</p><p>开始一个Hotfix: git flow hotfix start VERSION [BASENAME]</p><p>发布一个Hotfix: git flow hotfix finish VERSION</p><h2 id="4-关于init"><a href="#4-关于init" class="headerlink" title="4 关于init"></a>4 关于init</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git flow init -h</span><br><span class="line"></span><br><span class="line">USAGE: git flow init [flags] args</span><br><span class="line">flags:</span><br><span class="line">  -h  show this <span class="built_in">help</span> (default: <span class="literal">false</span>)</span><br><span class="line">  -f  force setting of gitflow branches, even <span class="keyword">if</span> already configured</span><br><span class="line">      (default: <span class="literal">false</span>)</span><br><span class="line">  -d  use default branch naming conventions (default: <span class="literal">false</span>)</span><br></pre></td></tr></table></figure><p>深入了解:</p><p>该配置写入到了 .git/cnfig 文件中, 如果发现该配置不正确, 可以直接进行编辑</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5 参考"></a>5 参考</h2><ul><li><a href="https://www.cnblogs.com/cnblogsfans/p/5075073.html" target="_blank" rel="noopener">https://www.cnblogs.com/cnblogsfans/p/5075073.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-git-flow&quot;&gt;&lt;a href=&quot;#1-git-flow&quot; class=&quot;headerlink&quot; title=&quot;1 git flow&quot;&gt;&lt;/a&gt;1 git flow&lt;/h2&gt;&lt;p&gt;Git flow script是基于git flow概念的一个帮助我们快速使
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="git" scheme="http://weihuchao.top/tags/git/"/>
    
      <category term="git-flow" scheme="http://weihuchao.top/tags/git-flow/"/>
    
  </entry>
  
  <entry>
    <title>SSH的一般配置</title>
    <link href="http://weihuchao.top/2018/10/27/ssh%E9%85%8D%E7%BD%AE/"/>
    <id>http://weihuchao.top/2018/10/27/ssh配置/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="config配置"><a href="#config配置" class="headerlink" title="config配置"></a>config配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Host fd-git</span><br><span class="line">    Hostname git.finger.dance</span><br><span class="line">    User git</span><br><span class="line">    IdentityFile ~/.ssh/weihc</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;config配置&quot;&gt;&lt;a href=&quot;#config配置&quot; class=&quot;headerlink&quot; title=&quot;config配置&quot;&gt;&lt;/a&gt;config配置&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td cl
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="SSH" scheme="http://weihuchao.top/tags/SSH/"/>
    
  </entry>
  
  <entry>
    <title>yilia主题自定义</title>
    <link href="http://weihuchao.top/2018/10/27/%E4%B8%BB%E9%A2%98%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    <id>http://weihuchao.top/2018/10/27/主题自定义/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>持续更新</p><h2 id="修改footer"><a href="#修改footer" class="headerlink" title="修改footer"></a>修改footer</h2><p>yilia/layout/_partial/footer.ejs</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer-info"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"display: inline-block;"</span>&gt;</span></span><br><span class="line">        Stay hunger, stay young!</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="修改文章显示时间"><a href="#修改文章显示时间" class="headerlink" title="修改文章显示时间"></a>修改文章显示时间</h2><p>yilia/layout/_partial/post/date.ejs</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= date(post.date, date_format) %&gt;</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%= date(post.date, &apos;YYYY-MM-DD HH:mm:ss&apos;) %&gt;</span><br></pre></td></tr></table></figure><p>代码参考</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Date / Time format</span><br><span class="line">## Hexo uses Moment.js to parse and display date</span><br><span class="line">## You can customize the date format as defined in</span><br><span class="line">## http://momentjs.com/docs/#/displaying/format/</span><br><span class="line">date_format: YYYY-MM-DD</span><br><span class="line">time_format: HH:mm:ss</span><br></pre></td></tr></table></figure><h2 id="首页文章标题对齐"><a href="#首页文章标题对齐" class="headerlink" title="首页文章标题对齐"></a>首页文章标题对齐</h2><p>yilia/source/main.0cf68a.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article-inner</span> <span class="selector-tag">h1</span><span class="selector-class">.article-title</span>, <span class="selector-class">.article-title</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: <span class="number">#696969</span>;</span><br><span class="line">  <span class="comment">/* margin-left: 0px; */</span></span><br><span class="line">  <span class="attribute">margin-left</span>: -<span class="number">4px</span>;</span><br><span class="line">  <span class="attribute">font-weight</span>: <span class="number">300</span>;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">35px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">26px</span>;</span><br><span class="line">  <span class="attribute">-webkit-transition</span>: color <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: color <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">-o-transition</span>: color <span class="number">0.3s</span>;</span><br><span class="line">  <span class="attribute">transition</span>: color <span class="number">0.3s</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="标题加入背景色"><a href="#标题加入背景色" class="headerlink" title="标题加入背景色"></a>标题加入背景色</h2><p>yilia/source/main.0cf68a.css</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.article-header</span>&#123;<span class="attribute">border-left</span>:<span class="number">5px</span> solid <span class="number">#4d4d4d</span>;<span class="attribute">background-color</span>: <span class="number">#d5d8d9</span>;<span class="attribute">padding</span>:<span class="number">30px</span> <span class="number">0</span> <span class="number">15px</span> <span class="number">25px</span>;<span class="attribute">padding-left</span>:<span class="number">7.6923%</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;持续更新&lt;/p&gt;
&lt;h2 id=&quot;修改footer&quot;&gt;&lt;a href=&quot;#修改footer&quot; class=&quot;headerlink&quot; title=&quot;修改footer&quot;&gt;&lt;/a&gt;修改footer&lt;/h2&gt;&lt;p&gt;yilia/layout/_partial/footer.ejs&lt;/
      
    
    </summary>
    
      <category term="Hexo" scheme="http://weihuchao.top/categories/Hexo/"/>
    
    
      <category term="Hexo" scheme="http://weihuchao.top/tags/Hexo/"/>
    
      <category term="主题" scheme="http://weihuchao.top/tags/%E4%B8%BB%E9%A2%98/"/>
    
      <category term="自定义" scheme="http://weihuchao.top/tags/%E8%87%AA%E5%AE%9A%E4%B9%89/"/>
    
  </entry>
  
  <entry>
    <title>gitlab的基本配置</title>
    <link href="http://weihuchao.top/2018/10/27/gitlab/"/>
    <id>http://weihuchao.top/2018/10/27/gitlab/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-设置账户和邮件"><a href="#1-设置账户和邮件" class="headerlink" title="1 设置账户和邮件"></a>1 设置账户和邮件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name weihuchao</span><br><span class="line">git config --global user.email weihuchao@xuetangx.com</span><br></pre></td></tr></table></figure><p>设置存储<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global credential.helper store</span><br></pre></td></tr></table></figure></p><h2 id="2-配置ssh-key"><a href="#2-配置ssh-key" class="headerlink" title="2 配置ssh-key"></a>2 配置ssh-key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &apos;weihuchao@xuetangx.com&apos;</span><br></pre></td></tr></table></figure><p>生成的文件在<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p><p>将内容复制到SSH keys里</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-设置账户和邮件&quot;&gt;&lt;a href=&quot;#1-设置账户和邮件&quot; class=&quot;headerlink&quot; title=&quot;1 设置账户和邮件&quot;&gt;&lt;/a&gt;1 设置账户和邮件&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="gitlab" scheme="http://weihuchao.top/tags/gitlab/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://weihuchao.top/2018/10/27/git%E5%92%8Cgithub%E5%92%8Cgitlab%E7%9A%84%E5%8C%BA%E5%88%AB/"/>
    <id>http://weihuchao.top/2018/10/27/git和github和gitlab的区别/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="git"><a href="#git" class="headerlink" title="git"></a>git</h2><p>git 是一种开源的版本控制系统，可以高效的管理项目版本。同时也是一个版本控制软件。</p><h2 id="GitHub"><a href="#GitHub" class="headerlink" title="GitHub"></a>GitHub</h2><p>GitHub 是一个面向开源及私有软件项目的托管平台。GitHub可以托管各种Git库，并提供web界面。</p><p>也就是说大众可以使用的, 且企业可以定制的。</p><h2 id="GitLab"><a href="#GitLab" class="headerlink" title="GitLab"></a>GitLab</h2><p>GitLab 是一个用于仓库管理系统的开源项目，使用git进行代码管理工具，可以自己搭建GitLab仓库服务器</p><p>企业自己搭建的一个git仓库使用的技术。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;git&quot;&gt;&lt;a href=&quot;#git&quot; class=&quot;headerlink&quot; title=&quot;git&quot;&gt;&lt;/a&gt;git&lt;/h2&gt;&lt;p&gt;git 是一种开源的版本控制系统，可以高效的管理项目版本。同时也是一个版本控制软件。&lt;/p&gt;
&lt;h2 id=&quot;GitHub&quot;&gt;&lt;a 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo博客的构建之路</title>
    <link href="http://weihuchao.top/2018/10/27/Hexo%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%9E%84%E5%BB%BA/"/>
    <id>http://weihuchao.top/2018/10/27/Hexo博客的构建/</id>
    <published>2018-10-27T11:37:39.000Z</published>
    <updated>2018-10-27T11:37:39.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1 介绍"></a>1 介绍</h2><p>hexo是基于node.js的。</p><p>它可用于创建博客， 且操作十分方便。</p><p>也可以和github关联，提交上自动生成的静态文件，配置之后任何人都可以轻松访问创建好的博客了。</p><p>地址不够酷炫没关系，购买一个域名来绑定给我们的博客。</p><p>页面不够酷炫没关系，还有一大波的主题等着我们应用。</p><h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2 安装Hexo"></a>2 安装Hexo</h2><ol><li><p>安装node.js</p><p><a href="http://nodejs.cn/" target="_blank" rel="noopener">http://nodejs.cn/</a></p></li></ol><ol start="2"><li><p>安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure></li><li><p>初始化hexo</p><p>注意这会在当前目录下生成hexo所需的内容，所以选定好一个合适的位置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure></li></ol><ol start="4"><li><p>(可选) 安装hexo的插件</p><p>虽然是可选但是安装完之后不会报一些因为缺插件导致的错误<br>比如缺少<strong>hexo-deployer-git</strong>在<strong>hexo d</strong>的时候就会找不到git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save</span><br><span class="line">npm install hexo-generator-archive --save</span><br><span class="line">npm install hexo-generator-category --save</span><br><span class="line">npm install hexo-generator-tag --save</span><br><span class="line">npm install hexo-server --save</span><br><span class="line">npm install hexo-deployer-git --save</span><br><span class="line">npm install hexo-deployer-heroku --save</span><br><span class="line">npm install hexo-deployer-rsync --save</span><br><span class="line">npm install hexo-deployer-openshift --save</span><br><span class="line">npm install hexo-renderer-marked@0.2 --save</span><br><span class="line">npm install hexo-renderer-stylus@0.2 --save</span><br><span class="line">npm install hexo-generator-feed@1 --save</span><br><span class="line">npm install hexo-generator-sitemap@1 --save</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>启动hexo查看效果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>g对应的是generate<br>s对应的是server<br>执行之后就可以访问<strong> <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> </strong>查看效果了</p></li></ol><h2 id="3-添加文章"><a href="#3-添加文章" class="headerlink" title="3 添加文章"></a>3 添加文章</h2><p>可以直接在项目<strong>/source/_posts</strong> 下直接创建需要的md文件即可<br>注意：md文件头部需要有一下信息， 来配置文章的标题、创建时间、tag、分类等内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 我是标题</span><br><span class="line">categories: 我是分类</span><br><span class="line">tags:</span><br><span class="line">- 我是tag</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h2 id="4-创建关于我"><a href="#4-创建关于我" class="headerlink" title="4 创建关于我"></a>4 创建关于我</h2><ol><li><p>在项目路径下执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>实际上就是生成了 <strong>项目/source/about/index.md</strong> 文件</p></li></ol><ol start="2"><li>编辑index.md文件的内容</li></ol><ol start="3"><li><p>修改 <strong>项目/themes/next/_config.yml</strong> 文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || home</span><br><span class="line">  about: /about/ || user        # 去掉这个位置的注释就可以了</span><br><span class="line">#  tags: /tags/ || tags</span><br><span class="line">  categories: /categories/ || th</span><br><span class="line">  archives: /archives/ || archive</span><br></pre></td></tr></table></figure></li></ol><h2 id="5-创建分类"><a href="#5-创建分类" class="headerlink" title="5 创建分类"></a>5 创建分类</h2><ol><li><p>在项目中执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>同样，会创建 <strong>项目/source/categories/index.md</strong> 文件</p></li></ol><ol start="2"><li><p>修改index.md文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2018-03-31 16:24:24</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>其中需要title的内容会被显示到页面<br>type必须要加上， 这样Hexo才会自动生成分类的内容</p></li></ol><ol start="3"><li>和创建关于我一样，需要修改配置文件</li></ol><h2 id="6-与gitbu关联"><a href="#6-与gitbu关联" class="headerlink" title="6 与gitbu关联"></a>6 与gitbu关联</h2><ol><li>获取git账号</li></ol><ol start="2"><li>创建一个repository<br>注意名字必须是<strong> 你的github用户.github.io </strong></li></ol><ol start="3"><li><p>在本地配置好git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;whims&quot;</span><br><span class="line">git config --global user.email &quot;whimswei@163.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>创建SSH秘钥</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh</span><br><span class="line">ssh-keygen -t rsa -C “whimswei@163.com”</span><br><span class="line">cat id_rsa.pub</span><br></pre></td></tr></table></figure></li></ol><ol start="5"><li><p>添加到git上</p><p>头像 -&gt; setting -&gt; SSH and GPG keys  -&gt; new SSH key  -&gt; Title自己定，Key输入id_rsa.pub的内容</p></li></ol><ol start="6"><li><p>配置hexo</p><p>配置项目/_config.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: 仓库地址</span><br><span class="line">  branch: 分支（一般是master）</span><br></pre></td></tr></table></figure></li><li><p>推送到git</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>d对应deploy</p></li></ol><h2 id="7-绑定域名"><a href="#7-绑定域名" class="headerlink" title="7 绑定域名"></a>7 绑定域名</h2><ol><li><p>本地项目的修改</p><p>创建文件 /source/CNAME</p><p>内容为域名</p></li></ol><ol start="2"><li><p>git上的修改</p><p>头像 -&gt; your profile -&gt; 项目 -&gt; setting -&gt; GitHub Pages -&gt; Custom domain </p><p>输入域名</p></li></ol><h2 id="8-（主题）Favicon"><a href="#8-（主题）Favicon" class="headerlink" title="8 （主题）Favicon"></a>8 （主题）Favicon</h2><ol><li>用小篆字体， <a href="http://www.dullr.com/11" target="_blank" rel="noopener">推荐网站</a></li></ol><ol start="2"><li>地址为 /source/favicon.jpg</li></ol><ol start="3"><li><p>对应主题配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">favicon: /favicon.jpg</span><br></pre></td></tr></table></figure></li></ol><h2 id="9-（主题）Share页面的配置"><a href="#9-（主题）Share页面的配置" class="headerlink" title="9 （主题）Share页面的配置"></a>9 （主题）Share页面的配置</h2><p>文件位置为/layout/_partial/post/share.ejs</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bdsharebuttonbox"</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;a href="#" class="fa fa-twitter bds_twi" data-cmd="twi" title="分享到推特"&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;a href="#" class="fa fa-weibo bds_tsina" data-cmd="tsina" title="分享到新浪微博"&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"fa fa-weixin bds_weixin"</span> <span class="attr">data-cmd</span>=<span class="string">"weixin"</span> <span class="attr">title</span>=<span class="string">"生成文章二维码"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"fa fa-qq bds_sqq"</span> <span class="attr">data-cmd</span>=<span class="string">"sqq"</span> <span class="attr">title</span>=<span class="string">"分享给 QQ 好友"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"fa fa fa-envelope-o bds_mail"</span> <span class="attr">data-cmd</span>=<span class="string">"mail"</span> <span class="attr">title</span>=<span class="string">"通过邮件分享"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"fa fa-files-o bds_copy"</span> <span class="attr">data-cmd</span>=<span class="string">"copy"</span> <span class="attr">title</span>=<span class="string">"复制网址"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;a href="#" class="fa fa-share-alt bds_more" data-cmd="more"&gt;&lt;/i&gt;&lt;/a&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="10-（主题）页底优化"><a href="#10-（主题）页底优化" class="headerlink" title="10 （主题）页底优化"></a>10 （主题）页底优化</h2><p>文件位置/layout/_partial/footer.ejs</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">footer</span> <span class="attr">id</span>=<span class="string">"footer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer-info"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"footer-left"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"fa fa-copyright"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                &lt;% if (theme.since &amp;&amp; !isNaN(theme.since) &amp;&amp; theme.since &lt; date(new Date(), 'YYYY')) &#123; %&gt;&lt;%- theme.since%&gt;-&lt;% &#125; %&gt;&lt;%= date(new Date(), 'YYYY') %&gt; &lt;%= config.author || config.title %&gt;</span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;div class="footer-right"&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;a href="http://hexo.io/" target="_blank" title="&lt;%= __('tooltip.Hexo') %&gt;"&gt;Hexo&lt;/a&gt;  Theme &lt;a href="https://github.com/MOxFIVE/hexo-theme-yelee" target="_blank" title="&lt;%= __('tooltip.Yelee') %&gt;  v&lt;%= theme.Yelee %&gt;"&gt;Yelee&lt;/a&gt; by MOxFIVE &lt;i class="fa fa-heart animated infinite pulse"&gt;&lt;/i&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;% if (theme.visit_counter.on) &#123; %&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;div class="visit"&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% if (theme.visit_counter.site_visit) &#123; %&gt;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;span id="busuanzi_container_site_pv" style='display:none'&gt;--&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--&lt;span id="site-visit" title="&lt;%= __('visit_counter.site') %&gt;"&gt;&lt;i class="fa fa-user" aria-hidden="true"&gt;&lt;/i&gt;&lt;span id="busuanzi_value_site_uv"&gt;&lt;/span&gt;--&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--&lt;/span&gt;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;/span&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% &#125; %&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% if (theme.visit_counter.site_visit &amp;&amp; theme.visit_counter.page_visit) &#123; %&gt;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;span&gt;| &lt;/span&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% &#125; %&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% if (theme.visit_counter.page_visit) &#123; %&gt;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;span id="busuanzi_container_page_pv" style='display:none'&gt;--&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--&lt;span id="page-visit"  title="&lt;%= __('visit_counter.page') %&gt;"&gt;&lt;i class="fa fa-eye animated infinite pulse" aria-hidden="true"&gt;&lt;/i&gt;&lt;span id="busuanzi_value_page_pv"&gt;&lt;/span&gt;--&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--&lt;/span&gt;--&gt;</span></span><br><span class="line">                    <span class="comment">&lt;!--&lt;/span&gt;--&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--&lt;% &#125; %&gt;--&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--&lt;/div&gt;--&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--&lt;% &#125; %&gt;--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="11-更多内容"><a href="#11-更多内容" class="headerlink" title="11 更多内容"></a>11 更多内容</h2><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">HEXO官方中文文档</a></li><li><a href="https://hexo.io/themes/" target="_blank" rel="noopener">HEXO主题</a></li><li><a href="http://moxfive.xyz/yelee/1.Getting-Started/" target="_blank" rel="noopener">主题文档</a></li><li>推荐主题<ul><li><a href="https://vevlins.github.io/" target="_blank" rel="noopener">https://vevlins.github.io/</a></li><li><a href="https://blog.meiqiu.me/2017/12/18/mysql-tips/" target="_blank" rel="noopener">https://blog.meiqiu.me/2017/12/18/mysql-tips/</a></li><li><a href="http://hejx.space/" target="_blank" rel="noopener">http://hejx.space/</a></li><li><a href="http://www.yujunren.com/blog/" target="_blank" rel="noopener">http://www.yujunren.com/blog/</a></li><li><a href="https://hcyue.me/" target="_blank" rel="noopener">https://hcyue.me/</a></li><li><a href="https://geekplux.com/" target="_blank" rel="noopener">https://geekplux.com/</a></li></ul></li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>自此就完成了一个可以快捷发表文章，任何人可以通过指定域名访问， 界面美观大方的博客网站。</p><p>接下来就是熟悉Markdown的语法，把文章的布局格式控制的更加精确，还有学习一些前端知识对页面进行改良甚至做成模板供大家使用，最终就是努力学习写出更好的博客内容。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-介绍&quot;&gt;&lt;a href=&quot;#1-介绍&quot; class=&quot;headerlink&quot; title=&quot;1 介绍&quot;&gt;&lt;/a&gt;1 介绍&lt;/h2&gt;&lt;p&gt;hexo是基于node.js的。&lt;/p&gt;
&lt;p&gt;它可用于创建博客， 且操作十分方便。&lt;/p&gt;
&lt;p&gt;也可以和github关联
      
    
    </summary>
    
      <category term="笔记" scheme="http://weihuchao.top/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo" scheme="http://weihuchao.top/tags/Hexo/"/>
    
      <category term="博客" scheme="http://weihuchao.top/tags/%E5%8D%9A%E5%AE%A2/"/>
    
      <category term="笔记" scheme="http://weihuchao.top/tags/%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>docker初步了解和使用</title>
    <link href="http://weihuchao.top/2018/09/19/docker/"/>
    <id>http://weihuchao.top/2018/09/19/docker/</id>
    <published>2018-09-19T03:07:20.000Z</published>
    <updated>2018-10-27T11:37:40.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>是一个开源的应用容器引擎。</p><p>打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实现虚拟化。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- https://get.docker.com/ | sh</span><br><span class="line"># 改地址下载的是一个shell脚本，可以将其管道给shell让其直接执行</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install linux-image-extra-$(uname -r) linux-image-extra-virtual</span><br><span class="line"># 注意这个$(uname -r)， 事实上uname -r是一个命令， 会返回系统内核版本，$包裹表示取得这个值放在这使用， 类似于eval。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;是一个开源的应用容器引擎。&lt;/p&gt;
&lt;p&gt;打包应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的 Linux 机器上，也可以实
      
    
    </summary>
    
      <category term="server" scheme="http://weihuchao.top/categories/server/"/>
    
    
      <category term="server" scheme="http://weihuchao.top/tags/server/"/>
    
      <category term="docker" scheme="http://weihuchao.top/tags/docker/"/>
    
  </entry>
  
</feed>
